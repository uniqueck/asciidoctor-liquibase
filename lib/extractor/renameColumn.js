// *** WARNING: DO NOT MODIFY *** This is a generated JavaScript source code! 
// 
// Generated by LF-ET 2.2.1 (230526A), https://www.lohrfink.de/lfet
// From decision table
// "/opt/data/github/asciidoctor/asciidoctor-liquibase/lfet/extractor/renameColumn.lfet"
// 16.06.2023 12:07
// 
// Changes to this code resulting from refactorings can be synchronised
// with LF-ET using the function "Scrapbook Import".
// 
// Prolog Decision Table ---->
function renameColumn(element, currentFile, processModel, logger, vfs) {
    // Prolog Decision Table <----
    
    // Condition B01/01: definition is based on ... format / yaml / yaml definition
    if (
    currentFile.endsWith('yaml')
    )
    {
        // Rule R01 ---->
        
        // Trace ---->
        logger.info(`renameColumn - 20230616.120700 - 1 / 3 - ${currentFile} - ${JSON.stringify(processModel)}`)
        // Trace <----
        
        // Action A01/01: extract ... / yaml / extract table on yaml definition
        let tableName = element.renameColumn.tableName
        let oldColumnName = element.renameColumn.oldColumnName
        let newColumnName = element.renameColumn.newColumnName
        let table = processModel.tables.get(tableName)
        let column = table.columns.get(oldColumnName)
        table.columns.set(newColumnName, column)
        table.columns.delete(oldColumnName)
        
        // Rule R01 <----
    
    // Condition B01/02: definition is based on ... format / xml / xml definition
    }
    else if (
    currentFile.endsWith('xml')
    )
    {
        // Rule R02 ---->
        
        // Trace ---->
        logger.info(`renameColumn - 20230616.120700 - 2 / 3 - ${currentFile} - ${JSON.stringify(processModel)}`)
        // Trace <----
        
        // Action A01/02: extract ... / xml / extract on xml definition
        let tableName = element.$['tableName']
        let oldColumnName = element.$['oldColumnName']
        let newColumnName = element.$['newColumnName']
        let table = processModel.tables.get(tableName)
        let column = table.columns.get(oldColumnName)
        table.columns.set(newColumnName, column)
        table.columns.delete(oldColumnName)
        
        // Rule R02 <----
    }
    else
    {
        // Rule R03 ---->
        
        // Trace ---->
        logger.info(`renameColumn - 20230616.120700 - 3 / 3 - ${currentFile} - ${JSON.stringify(processModel)}`)
        // Trace <----
        
        // Action A02: error
        logger.error(`renameColumn - 20230616.120700 - Format for ${currentFile} is not supported.`)
        
        // Rule R03 <----
    }
    
    // Epilog Decision Table ---->
}

module.exports = {
  extract: (element, currentFile, processModel, logger, vfs) => {
    return renameColumn(element, currentFile, processModel, logger, vfs)
  }
}
// Epilog Decision Table <----

// End of generated JavaScript source code
// Generated by LF-ET 2.2.1 (230526A), https://www.lohrfink.de/lfet

