<?xml version="1.0" encoding="UTF-8"?>

<LFET version="LF-ET 2.2.1 (230826a)" language="English" saveDate="2023.09.09 at 21:06:55 CEST" saveUser="constantin">
  <Conditions>
    <Condition uId="16863469997658590">
      <Title language="English" value="definition is based on ... format"/>
      <ConditionOccurrences>
        <ConditionOccurrence uId="16863486742924066">
          <Symbol language="English" value="yaml"/>
          <Title language="English" value="yaml definition"/>
          <SourceCode codeLanguage="JavaScript" sourceCodeType="LogArg" value="currentFile.endsWith('$$symbol')"/>
          <TestValue group="Cucumber" type="tcpre" value="'${*GTD.Format.Format}' based '${*LFET.DT.Name}' changeset"/>
          <TestValue group="*ti.gtd.Cucumber" type="tcpre" value="Row, Format, Formats, Format = '${*LFET.Symbol}'"/>
        </ConditionOccurrence>
        <ConditionOccurrence uId="16863875092701159">
          <Symbol language="English" value="xml"/>
          <Title language="English" value="xml definition"/>
          <SourceCode codeLanguage="JavaScript" sourceCodeType="LogArg" value="currentFile.endsWith('$$symbol')"/>
          <TestValue group="Cucumber" type="tcpre" value="'${*GTD.Format.Format}' based '${*LFET.DT.Name}' changeset"/>
          <TestValue group="*ti.gtd.Cucumber" type="tcpre" value="Row, Format, Formats, Format = '${*LFET.Symbol}'"/>
        </ConditionOccurrence>
        <ConditionOccurrence uId="16863486742944068">
          <Symbol language="English" value="*"/>
          <Title language="English" value="extractor not supported for other formats"/>
          <TestValue group="*ti.gtd.Cucumber" type="tcpre" value="Row, Format, Formats, Supported = false"/>
          <TestValue group="Cucumber" type="tcpre" value="'${*GTD.Format.Format}' based '${*LFET.DT.Name}' changeset"/>
        </ConditionOccurrence>
      </ConditionOccurrences>
    </Condition>
  </Conditions>
  <Actions>
    <Action uId="11443124863976962">
      <Title language="English" value="extract ..."/>
      <ActionOccurrences>
        <ActionOccurrence uId="16863487805934306">
          <Symbol language="English" value="yaml"/>
          <Title language="English" value="extract table on yaml definition"/>
          <SourceCode codeLanguage="JavaScript" sourceCodeType="StmtSeq" value="const tableName = element.addColumn.tableName&lt;br/&gt;const table = processModel.tables.get(tableName)&lt;br/&gt;const columns = element.addColumn.columns&lt;br/&gt;columns.forEach((column) =&gt; {&lt;br/&gt;  const columnDetails = require('./column').extract(column.column, currentFile, logger)&lt;br/&gt;  table.columns.set(columnDetails.name, columnDetails)&lt;br/&gt;})"/>
        </ActionOccurrence>
        <ActionOccurrence uId="16863874949031053">
          <Symbol language="English" value="xml"/>
          <Title language="English" value="extract on xml definition"/>
          <SourceCode codeLanguage="JavaScript" sourceCodeType="StmtSeq" value="const tableName = element.$.tableName&lt;br/&gt;const table = processModel.tables.get(tableName)&lt;br/&gt;const columns = element.column&lt;br/&gt;columns.forEach((column) =&gt; {&lt;br/&gt;  const columnDetails = require('./column').extract(column, currentFile, logger)&lt;br/&gt;  table.columns.set(columnDetails.name, columnDetails)&lt;br/&gt;})"/>
        </ActionOccurrence>
      </ActionOccurrences>
      <TestValue group="Cucumber" type="tcpost" value="'${*LFET.DT.Name}' information is extracted"/>
      <UrlsOut>
        <Url title="column.lfet" url="file:///./column.lfet"/>
      </UrlsOut>
    </Action>
    <Action uId="11443124877466972">
      <Title language="English" value="error"/>
      <ActionOccurrences>
        <ActionOccurrence uId="16926514790330547">
          <Symbol language="English" value="X"/>
          <Title language="English" value="execute action"/>
          <SourceCode codeLanguage="JavaScript" sourceCodeType="StmtSeq" value="logger.error(`$$dtName - $$version - Format for ${currentFile} is not supported.`)"/>
          <TestValue group="Cucumber" type="tse" value="Error message '${*LFET.DT.Name} - ${*LFET.version.dt} - Format for currentFile.${*GTD.Format.Format} is not supported.' is logged"/>
        </ActionOccurrence>
      </ActionOccurrences>
    </Action>
  </Actions>
  <Rules lastId="359">
    <Rule id="342">
      <ConditionOccurrenceLink link="16863486742924066"/>
      <ActionOccurrenceLink link="16863487805934306"/>
    </Rule>
    <Rule id="344">
      <ConditionOccurrenceLink link="16863875092701159"/>
      <ActionOccurrenceLink link="16863874949031053"/>
    </Rule>
    <Rule id="345">
      <ConditionOccurrenceLink link="16863486742944068"/>
      <ActionOccurrenceLink link="16926514790330547"/>
    </Rule>
  </Rules>
  <Title language="English" value="extract liquibase element addColumn"/>
  <UrlsOut>
    <Url title="Folder" url="file:///./"/>
  </UrlsOut>
  <SourceCode codeLanguage="JavaScript" sourceCodeType="Prolog" value="const { stringify } = require('../utils')&lt;br/&gt;&lt;br/&gt;function $$dtname (element, currentFile, processModel, logger, vfs) {"/>
  <SourceCode codeLanguage="JavaScript" sourceCodeType="Epilog" value="}&lt;br/&gt;&lt;br/&gt;module.exports = {&lt;br/&gt;  extract: (element, currentFile, processModel, logger, vfs) =&gt; {&lt;br/&gt;    return $$dtname(element, currentFile, processModel, logger, vfs)&lt;br/&gt;  }&lt;br/&gt;}"/>
  <SourceCode codeLanguage="JavaScript" sourceCodeType="Trace" value="logger.info(`$$dtName - $$version - $$rule / $$rules - ${currentFile} - ${stringify(processModel)}`)"/>
  <TestValueGroups selectedGroup="Cucumber">
    <TestValueGroup name="*ti.check.Cucumber"/>
    <TestValueGroup name="*ti.gtd.Cucumber"/>
    <TestValueGroup name="*ti.att.Cucumber"/>
    <TestValueGroup name="Cucumber" tvgTiAtt="*ti.att.Cucumber" tvgTiCheck="*ti.check.Cucumber" tvgTiGTD="*ti.gtd.Cucumber">
      <Config name="Config" tags="cucumber" parms="-Group 'Cucumber' -GtdDirectory '../../test/features/testdata/' -GtdFileNamePattern '*.txt; *.csv' -NonExecutableRules '50' -RecommendedTestCases -OutGherkin 'addColumn.testcases.feature'"/>
    </TestValueGroup>
  </TestValueGroups>
  <TestValue group="Cucumber" type="isi" value="extractor '${*LFET.DT.Name}' is called"/>
  <TestValue group="Cucumber" type="tcpre" value="#language:en"/>
</LFET>
