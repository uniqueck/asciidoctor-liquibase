// *** WARNING: DO NOT MODIFY *** This is a generated Java source code! 
// 
// Generated by LF-ET 2.2.1 (230505a), https://www.lohrfink.de/lfet
// From decision table
// "/opt/data/github/asciidoctor/asciidoctor-liquibase/lfet/asciidoctor-liquibase.lfet"
// 13.05.2023 23:16
// 
// Changes to this code resulting from refactorings can be synchronised
// with LF-ET using the function "Scrapbook Import".
// 
// Prolog Decision Table ---->
/* global Opal */
// @ts-check

function liquibaseBlockMacro (name, context) {
    return function () {
        const self = this
        self.named(name)
        self.positionalAttributes(['tillTag'])
        self.process((parent, target, attrs) => {
            let vfs = context.vfs
            const changelogFile = parent.applySubstitutions(target, ['attributes'])
            const doc = parent.getDocument()
            const logger = doc.getLogger()
            const tillTag = attrs.tillTag || undefined
    // Prolog Decision Table <----
    
    // Condition C01/01: changeset format / xml / xml based changeset definitions
    if (
        changelogFile.endsWith('.xml')
    )
    {
        // Rule R01 ---->
        
        // Trace ---->
        logger.info('asciidoctor-liquibase - 20230513.231626 - 1 / 2')
        // Trace <----
        
        // Action A01/01: parse changesets / xml / parse xml based changesets
        const XMLParser = require('xml2js').Parser;
        const parser = new XMLParser({preserveChildrenOrder: true, explicitArray: true, explicitRoot: false, explicitChildren: true});
        
        var elements = []
        parser.parseString(vfs.read(changelogFile), function(err, result) {
            elements = result.$$
        });
        const processModel = {finshedProcessing : false}
        processModel.tables = new Map()
        require('./liquibase-xml-parser.js').parseLiquibaseChangeSet(processModel, elements, logger, vfs, tillTag)
        console.log(processModel)
        
        // Rule R01 <----
    }
    else
    {
        // Rule R02 ---->
        
        // Trace ---->
        logger.info('asciidoctor-liquibase - 20230513.231626 - 2 / 2')
        // Trace <----
        
        // Action A02: log not supported changeset definition
        // TODO code statement sequence for A02 here
        
        // Rule R02 <----
    }
    
    // Epilog Decision Table ---->
            return undefined
        })
    }
}

module.exports.register = function (registry, context = {}) {

    if (typeof context.contentCatalog !== 'undefined' && typeof context.contentCatalog.addFile === 'function' && typeof context.file !== 'undefined') {
        context.vfs = require('./antora-adapter.js')(context.file, context.contentCatalog, context.vfs)
    }
    context.logger = Opal.Asciidoctor.LoggerManager.getLogger()
    const names = [
        'liquibase',
    ]

    if (typeof registry.register === 'function') {
        registry.register(function () {
          for (const name of names) {
            this.blockMacro(liquibaseBlockMacro(name, context))
          }
        })
      } else if (typeof registry.block === 'function') {
        for (const name of names) {
            registry.blockMacro(liquibaseBlockMacro(name, context))
        }
      }
      return registry
}
// Epilog Decision Table <----

// End of generated Java source code
// Generated by LF-ET 2.2.1 (230505a), https://www.lohrfink.de/lfet

